/*==================================
++++++++++연산자(Operator)++++++++++
- 비트 단위 연산자
====================================
◎ Test026.java
==================================*/

// 비트 shift 연산자


public class Test026
{
	public static void main(String[] args)
	{
		int x = 128;
		// 128		→ 00000000 00000000 00000000 10000000
		// 128<<3	→ 00000000 00000000 00000100 00000000
		// 128>>3	→ 00000000 00000000 00000000 00010000
		
		System.out.printf("x << 3 = %d\n", (x<<3));
		System.out.printf("x * 8 = %d\n", (x*8));

		System.out.printf("x >> 3 = %d\n", (x>>3));
		System.out.printf("x / 8 = %d\n", (x/8));

		System.out.println();

		System.out.printf("x << 24 = %d\n", (x<<24));	//--x=-2147483648
		// 10000000 00000000 00000000 00000000
		// x<<24 = -2147483648

		System.out.printf("x << 25 = %d\n", (x<<25));	//--x=0
		// 1(탈출)   00000000 00000000 00000000 00000000
		// 자바에서는 값이 탈출할 경우 원래 자리로 돌아오기 전까지는 보이지 않음(0)
		// 이 경우 32칸 이동할 경우 원래 값(128)이 될 수 있음

		System.out.printf("x << 26 = %d\n", (x<<26));	//--x=0
		System.out.printf("x << 31 = %d\n", (x<<31));	//--x=0
		System.out.printf("x << 32 = %d\n", (x<<32));	//--x=128
		System.out.printf("x << 34 = %d\n", (x<<33));	//--x=256
	}
}


/*
[실행 결과]
x << 3 = 1024
x * 8 = 1024
x >> 3 = 16
x / 8 = 16

x << 24 = -2147483648
x << 25 = 0
x << 26 = 0
x << 31 = 0
x << 32 = 128
x << 34 = 256
계속하려면 아무 키나 누르십시오 . . .
*/
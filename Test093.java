/*=============================
+++++++클래스와 인스턴스+++++++
-클래스 변수(static 변수)와
 클래스 메소드(static 메소드)
===============================
◎ Test093.java
=============================*/


public class Test093
{
	// ※ 클래스 변수 또는 클래스 메소드는
	//    클래스 정보가 로딩되는 순간 메모리 할당이 이루어지며
	//    클래스 이름 또는 객체(인스턴스)를 통해 접근할 수 있다.
	//    즉, 『new』 연산자를 통해 메모리를 할당받지 않아도 사용이 가능하다.
	static int a = 10;	//--클래스 변수(static 변수)

	// ※ 인스턴스 변수는
	//    동일한 클래스의 메소드에서는 바로 접근하는 것이 가능하지만
	//    클래스 메소드(static 메소드)에서는 접근할 수 없다.
	int b = 20;			//--인스턴스 변수(instance 변수)

	void write()		//--인스턴스 메소드(instance 메소드)
	{
		System.out.println("클래스 변수 a: "+a);
		System.out.println("인스턴스 변수 b: "+b);
	}

	static void print()	//--클래스 메소드(static 메소드)
	{
		System.out.println("클래스 변수 a: "+a);
		// System.out.println("인스턴스 변수 b: "+b);	//--에러 발생 non-static variable b cannot be referenced from a static context
	}

	public static void main(String[] args)
	{
		// 클래스 변수에 접근하기 위해서는 『클래스명.변수명』의 형태로 접근이 가능하다
		// 현재는 같은 클래스 내에 있기 때문에 클래스명 생략 가능
		System.out.println("main() → 클래스 변수 a: "+Test093.a);
		// 클래스 메소드에서 클래스 메소드의 호출은 가능하며
		// 『클래스명.메소드명()』의 형태로 접근하여 호출하는 것이 가능하다.
		// 또한, 지금은 같은 클래스 내부에 존재하기 때문에 클래스의 이름을 생략하는 것이 가능하다.
		Test093.print();
		
		// Test093 클래스 기반 인스턴스 생성
		Test093 ob1 = new Test093();
		System.out.println("main() → 인스턴스 변수 b: "+ob1.b);
		// 생성된 인스턴스를 통해 인스턴스 메소드 접근(호출)
		ob1.write();

		// 생성된 인스턴스를 통해 클래스 변수 접근
		System.out.println("main() → 클래스 변수 a: "+ob1.a);
		// 생성된 인스턴스를 통해 클래스 메소드 접근
		ob1.print();

		// ※ 클래스 변수나 클래스 메소드는
		//    『생성된인스턴스명.변수명』, 『생성된인스턴스명.메소드명()』
		//    의 형태로도 접근(호출)이 가능하지만
		//    『클래스명.변수명』, 『클래스명.메소드명()』
		//    의 형태로 접근(호출)하는 것이 일반적이다.

		// Test093 클래스 기반 두 번째 인스턴스 생성
		Test093 ob2 = new Test093();
		ob2.a = 1000;	//--클래스 변수 초기화
		ob2.b = 2000;	//--인스턴스 변수 초기화

		System.out.println("ob2 확인 -------------------------");
		ob2.write();
		ob2.print();
		// 클래스 변수 a: 1000
		// 인스턴스 변수 b: 2000
		// 클래스 변수 a: 1000

		System.out.println("ob1 확인 -------------------------");
		ob1.write();
		ob1.print();
		// 클래스 변수 a: 1000
		// 인스턴스 변수 b: 20
		// 클래스 변수 a: 1000
	}
}

/*
[실행 결과]
main() → 클래스 변수 a: 10
클래스 변수 a: 10
main() → 인스턴스 변수 b: 20
클래스 변수 a: 10
인스턴스 변수 b: 20
main() → 클래스 변수 a: 10
클래스 변수 a: 10
ob2 확인 -------------------------
클래스 변수 a: 1000
인스턴스 변수 b: 2000
클래스 변수 a: 1000
ob1 확인 -------------------------
클래스 변수 a: 1000
인스턴스 변수 b: 20
클래스 변수 a: 1000
계속하려면 아무 키나 누르십시오 . . .
*/